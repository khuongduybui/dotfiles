# https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-alias.html
[toplevel]

whoami = sts get-caller-identity

list-sgs = ec2 describe-security-groups --query "SecurityGroups[].[GroupId, GroupName]" --output text

sg-rules = !f() { aws ec2 describe-security-groups \
    --query "SecurityGroups[].IpPermissions[].[FromPort,ToPort,IpProtocol,join(',',IpRanges[].CidrIp)]" \
    --group-id "$1" --output text; }; f

get-group-id =
  !f() {
    aws ec2 describe-security-groups --filters Name=group-name,Values=${1} --query SecurityGroups[0].GroupId --output text
  }; f

# List or set your region
region = !f() { [[ $# -eq 1 ]] && aws configure set region "$1" || aws configure get region; }; f


docker-ecr-login =
  !f() {
    region=$(aws configure get region)
    endpoint=$(aws ecr get-authorization-token --region $region --output text --query authorizationData[].proxyEndpoint)
    passwd=$(aws ecr get-authorization-token --region $region --output text --query authorizationData[].authorizationToken | base64 --decode | cut -d: -f2)
    echo docker login -u AWS -p $passwd $endpoint
    docker login -u AWS -p $passwd $endpoint
  }; f

my-ip = !f() { curl -s https://checkip.amazonaws.com; }; f

allow-my-ip =
  !f() {
    my_ip=$(aws my-ip)
    aws ec2 authorize-security-group-ingress \
      --group-id ${1} \
      --ip-permissions IpProtocol=${2},FromPort=${3},ToPort=${3},IpRanges="[{CidrIp=$my_ip/32,Description='${4:-$USER}'}]"
  }; f

revoke-my-ip =
  !f() {
    my_ip=$(aws my-ip)
    aws ec2 revoke-security-group-ingress --group-id ${1} --protocol ${2} --port ${3} --cidr $my_ip/32
  }; f

allow-my-ip-all =
  !f() {
    aws allow-my-ip ${1} all all
  }; f

revoke-my-ip-all =
  !f() {
    aws revoke-my-ip ${1} all all
  }; f

[command s3]
cat =
  !f() {
    aws s3 cp ${1} -
  }; f

cat-gz =
  !f() {
    aws s3 cp ${1} - | gzip -d
  }; f

cat-gz-b64 =
  !f() {
    aws s3 cp ${1} - | gzip -d | base64 -d
  }; f

cat-ingest =
  !f() {
    aws s3 cp ${1} - | gzip -d | jq -r .Data.body.body | base64 -d
  }; f

cat-read =
  !f() {
    aws s3 cp ${1} - | gzip -d | jq -r .[].MessageBody | jq -r '"\(if .message then .message else "[\(.timestamp)][\(.type)] \(.status) \(.aux)" end)"'
  }; f

code =
  !f() {
    aws cat ${1} | code -
  }; f

code-gz =
  !f() {
    aws cat-gz ${1} | code -
  }; f

code-gz-b64 =
  !f() {
    aws cat-gz-b64 ${1} | code -
  }; f

code-ingest =
  !f() {
    aws cat-ingest ${1} | code -
  }; f

code-read =
  !f() {
    aws cat-read ${1} | code -
  }; f
